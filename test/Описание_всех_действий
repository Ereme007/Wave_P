Как описать функцию?
1) Смысл
2) Значения на вход
3) Значения на выходе

!Ошибки(недоработки)!
1) зануление (возможно из-за этого в следующих действиях возникают ошибки) файл Function_P.jl (есть наработки в другой ветке) (UPD сделана зануление линии)
2) значение RADIUS (корректируем в другой ветке)
3) алгоритм не оценивает есть ли волна P или нет

Проблемы
Файл 50  96  104  107  69  32
32 - из-за первого отведения (Test1 помог)
50 - из-за 1го отведениях (Test1 помог, но всё равно Out)
69 - из-за 1го отвдения (Test1 помог, но всё равно Out)
96 - из-за первого отведения (Test1 помог, но всё равно Out)
104 - из-за 1го отведения  (Test1 помог, но всё равно Out)
107 - захват Т ?!


Формула для exel 
=СЧЁТЕСЛИ(H2:H114;"Out")
=СЧЁТЕСЛИ(E2:E114;"Out")

Смысл файлов:
(+)Файл .env - файл с глобальными константами
( )Файл Пример_зануление_qrs.jl - тестовый файл
(+)Файл Create_Table.jl - файл, в котором записываем статистику по всем файлам (исключая те, в которых нет Р) 
( )Файл Finally.jl - итоговый файл. 1ая часть - разные простые графики (в основном из Function_P.jl), 2я часть - сложные графики с найденными фронтами
( )Файл Function_P.jl - многие вспомогательные функции для детекции волны P
(+)Файл Function_dist.jl - Файл, содержащий функции для реферетной разметки QRS & P, Фильтр границ, найденные с помощью алгоритма, Способы сведения границ
(+)Файл Function_P_file.jl - "бесполезные" проверки и определение сигналаУ
(+)Markup_function_P.jl - Функция, которая переводит массив Massiv_Amp_all_channels в Amp Left Right (Points_fronts)
(+)Plots_P.jl - Функции отрисовки сложных графиков
(+)src/plots.jl - добавлена функция plot_vertical_ref для реферетной разметки по всем графикам

Есть два варината сведения границ:
1). Выбираем ТУ ТОЧКУ, которая максимально будет приближена к дргим точкам (но есть дистанция/область видимости, которую надо учитывать)
2). Скользящее окно (меньше чем вся область покрытия для границы), определяет сколько в данный момент времени границ входит в это скользящее окно, выбираем то окно где максимально

Общее описание
Описание алгоритма (порядок действий):
Имеем сигнал, разметку qrs и частоту
1) Преобразовываем сигнал в удобный (для меня) обработке вид
2) Считываем реферетную разметку _read_ref('номер файла')
3) Разметку qrs дублируем на всём сигнале
4) Зануляем qrs с помощью Line_qrs()
5) Применяем фильтр my_butter к сигналу без qrs Graph_my_butter()
6) Находим область поиска волны P Segment_left_right_P() {Place_found_P_Left_and_Right = [Left, Right]}
7) Фильтр дифференцирования на сигнал Graph_diff()
8) Находим все экстремумы в области посика P All_points_with_channels_max_min()
9) Сортируем точки поканально Sort_points_with_channel(), получается массив ('Massiv_Points_channel'), в котором все экстремумы
10) После чего реализована функция, которая вычисляет массив Amp, Left, Right, т е вычисляет фронт amp_all_cannel() ('Massiv_Amp_all_channels')


P.S. У меня есть 'Massiv_Points_channel' и 'Massiv_Amp_all_channels', благодаря которым можно узнать мои границы P 
"Function_P_file.jl"
a) My_Edge_P_All_Channel - границы моей волны на всех отведениях
b) My_Edge_P_One_Channel - на одном отведении
c) My_Edge_P - на одном отведении и на заданной области